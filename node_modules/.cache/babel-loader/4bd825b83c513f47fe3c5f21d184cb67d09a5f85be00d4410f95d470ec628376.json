{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/pages/direct/Direct.jsx\";\nimport React, { useState } from 'react';\nimport \"./Direct.css\";\nimport io from \"socket.io-client\";\n\n//通信したいURLを指定\n//const socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Direct() {\n  // const [message, setMessage] = useState(\"\");\n  // const [list, setList] = useState([])\n\n  // const handleSendMessage = () => {\n  //   //serverへ送信\n  //   socket.emit(\"send_message\", {message: message});\n  //   setMessage(\"\");\n  // }\n\n  // //サーバーから受信\n  // socket.on(\"received_message\", (data) => {\n  //   console.log(data);\n  //   //リストにデータを追加\n  //   setList([...list, data])\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"direct\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Direct;\nvar _c;\n$RefreshReg$(_c, \"Direct\");","map":{"version":3,"names":["React","useState","io","Direct"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/direct/Direct.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"./Direct.css\"\nimport io from \"socket.io-client\"\n\n//通信したいURLを指定\n//const socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\n\nexport default function Direct() {\n\n  // const [message, setMessage] = useState(\"\");\n  // const [list, setList] = useState([])\n\n  // const handleSendMessage = () => {\n  //   //serverへ送信\n  //   socket.emit(\"send_message\", {message: message});\n  //   setMessage(\"\");\n  // }\n\n  // //サーバーから受信\n  // socket.on(\"received_message\", (data) => {\n  //   console.log(data);\n  //   //リストにデータを追加\n  //   setList([...list, data])\n  // })\n\n  return (\n    <div className=\"direct\">\n      <div className=\"container\">\n        <h2>チャット</h2>\n        {/* <div className=\"chatInputButton\">\n          <input type=\"text\" placeholder='にちゃあ・・・っと' onChange={(e) => setMessage(e.target.value)}/>\n          <button onClick={() => handleSendMessage()}>チャット</button>\n        </div>\n        {list.map((chat) => (\n          <div className=\"chatArea\" key={chat.message}>\n            {chat.message}\n          </div>\n        ))} */}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AACA;AACA;AACA;AAAA;AAEA,eAAe,SAASC,MAAM,GAAG;EAE/B;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAA,UAAI;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA;EAUT;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAlCuBA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}