{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // user: null,\n  user: {\n    _id: \"63cb6820a1dccc840600291f\",\n    username: \"john\",\n    email: \"john@email.com\",\n    password: \"123456\",\n    profilePicture: \"/monster/Icon01.png\",\n    coverPicture: \"\",\n    subject: \"\",\n    city: \"saga\",\n    method: false,\n    type: true\n  },\n  isFetching: false,\n  error: false\n};\n\n//グローバルコンテキストを作成\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n  useEffect(() => {}, [state]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","AuthReducer","initialState","user","_id","username","email","password","profilePicture","coverPicture","subject","city","method","type","isFetching","error","AuthContext","AuthContextProvider","children","state","dispatch"],"sources":["/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態\nconst initialState = {\n  // user: null,\n  user: {\n    _id: \"63cb6820a1dccc840600291f\",\n    username: \"john\",\n    email: \"john@email.com\",\n    password: \"123456\",\n    profilePicture: \"/monster/Icon01.png\",\n    coverPicture: \"\",\n    subject: \"\",\n    city: \"saga\",\n    method: false,\n    type:  true,\n  },\n  isFetching: false,\n  error: false,\n};\n\n//グローバルコンテキストを作成\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer,initialState);\n\n  useEffect(() => {\n\n  }, [state,])\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {/* index.jsを<AuthContextProvider>で囲ったのでchildrenはApp.jsになる */}\n      {children}\n    </AuthContext.Provider>\n  )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC5D,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA;AACA,MAAMC,YAAY,GAAG;EACnB;EACAC,IAAI,EAAE;IACJC,GAAG,EAAE,0BAA0B;IAC/BC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE,QAAQ;IAClBC,cAAc,EAAE,qBAAqB;IACrCC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAG;EACT,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,gBAAGlB,aAAa,CAACI,YAAY,CAAC;AAEtD,OAAO,MAAMe,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,UAAU,CAACC,WAAW,EAACC,YAAY,CAAC;EAE9DH,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACoB,KAAK,CAAE,CAAC;EAEZ,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLhB,IAAI,EAAEgB,KAAK,CAAChB,IAAI;MAChBW,UAAU,EAAEK,KAAK,CAACL,UAAU;MAC5BC,KAAK,EAAEI,KAAK,CAACJ,KAAK;MAClBK;IACF,CAAE;IAAA,UAGDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAA,GApBYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}