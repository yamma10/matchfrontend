{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { AuthContext } from '../../state/AuthContext';\nimport \"./TalkRoom.css\";\n//通信したいURLを指定\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\n\nexport default function TalkRoom() {\n  _s();\n  const roomId = useParams().room_id;\n\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const Messages = await axios.get(`/message/receive/${roomId}`);\n      console.log(Messages);\n      setMessages(Messages);\n    };\n    fetchMessages();\n  }, []);\n  console.log(messages);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [list, setList] = useState([]);\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    };\n    //serverへ送信\n    socket.emit(\"send_message\", {\n      message: User\n    });\n    setMessages(\"\");\n    console.log(\"sousinn\");\n  };\n\n  //サーバーから受信\n  socket.on(\"received_message\", data => {\n    console.log(data);\n\n    //リストにデータを追加\n    setList([...list, data]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"talkroom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInputButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u306B\\u3061\\u3083\\u3042\\u30FB\\u30FB\\u30FB\\u3063\\u3068\",\n          onChange: e => setMessage(e.target.value),\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(),\n          children: \"\\u30C1\\u30E3\\u30C3\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), list.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatArea\",\n        children: chat.message\n      }, chat.message, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TalkRoom, \"189vL3u0RmFcTgBkwE6iVzvFLJc=\", false, function () {\n  return [useParams];\n});\n_c = TalkRoom;\nvar _c;\n$RefreshReg$(_c, \"TalkRoom\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useState","useParams","io","AuthContext","socket","TalkRoom","roomId","room_id","fetchMessages","Messages","get","console","log","setMessages","messages","user","list","setList","handleSendMessage","User","_id","message","emit","on","data","e","setMessage","target","value","map","chat"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { AuthContext } from '../../state/AuthContext';\n\nimport \"./TalkRoom.css\"\n  //通信したいURLを指定\n  const socket = io(\"http://localhost:5000\");\n  //CORSの関係でエラーが出るので\n  //サーバー側で処理を書く\n\nexport default function TalkRoom() {\n\n  const roomId = useParams().room_id\n\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const Messages = await axios.get(`/message/receive/${roomId}`);\n      console.log(Messages);\n      setMessages(Messages)\n    }\n    fetchMessages();\n  }, [])\n\n  console.log(messages);\n\n  const { user } = useContext(AuthContext)\n\n  const [messages, setMessages] = useState([]);\n  const [list, setList] = useState([])\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    }\n    //serverへ送信\n    socket.emit(\"send_message\", {message: User});\n    setMessages(\"\");\n    console.log(\"sousinn\")\n  }\n\n  //サーバーから受信\n  socket.on(\"received_message\", (data) => {\n    console.log(data);\n    \n    //リストにデータを追加\n    setList([...list, data])\n  })\n  \n  return (\n    <div className=\"talkroom\">\n      <div className=\"container\">\n        <h2>チャット</h2>\n        <div className=\"chatInputButton\">\n          <input type=\"text\" placeholder='にちゃあ・・・っと' onChange={(e) => setMessage(e.target.value)} value={message}/>\n          <button onClick={() => handleSendMessage()}>チャット</button>\n        </div>\n        {list.map((chat) => (\n          <div className=\"chatArea\" key={chat.message}>\n            {chat.message}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,WAAW,QAAQ,yBAAyB;AAErD,OAAO,gBAAgB;AACrB;AAAA;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;AAC1C;AACA;;AAEF,eAAe,SAASG,QAAQ,GAAG;EAAA;EAEjC,MAAMC,MAAM,GAAGL,SAAS,EAAE,CAACM,OAAO;;EAElC;EACA;;EAEAR,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,YAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,oBAAmBJ,MAAO,EAAC,CAAC;MAC9DK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBI,WAAW,CAACJ,QAAQ,CAAC;IACvB,CAAC;IACDD,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAENG,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;EAErB,MAAM;IAAEC;EAAK,CAAC,GAAGjB,UAAU,CAACK,WAAW,CAAC;EAExC,MAAM,CAACW,QAAQ,EAAED,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMkB,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,GAAG,EAAEL,IAAI,CAACK,GAAG;MACbC,OAAO,EAAEA;IACX,CAAC;IACD;IACAjB,MAAM,CAACkB,IAAI,CAAC,cAAc,EAAE;MAACD,OAAO,EAAEF;IAAI,CAAC,CAAC;IAC5CN,WAAW,CAAC,EAAE,CAAC;IACfF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;;EAED;EACAR,MAAM,CAACmB,EAAE,CAAC,kBAAkB,EAAGC,IAAI,IAAK;IACtCb,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC;;IAEjB;IACAP,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEQ,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACvB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA,UAAI;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,wDAAW;UAAC,QAAQ,EAAGC,CAAC,IAAKC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAAC,KAAK,EAAEP;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE,eACzG;UAAQ,OAAO,EAAE,MAAMH,iBAAiB,EAAG;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACrD,EACLF,IAAI,CAACa,GAAG,CAAEC,IAAI,iBACb;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBA,IAAI,CAACT;MAAO,GADgBS,IAAI,CAACT,OAAO;QAAA;QAAA;QAAA;MAAA,QAG5C,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3DuBhB,QAAQ;EAAA,QAEfJ,SAAS;AAAA;AAAA,KAFFI,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}