{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/pages/direct/Direct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport \"./Direct.css\";\nimport io from \"socket.io-client\";\nimport { AuthContext } from '../../state/AuthContext';\n//通信したいURLを指定\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\n\nexport default function Direct() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [message, setMessage] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    };\n    //serverへ送信\n    socket.emit(\"send_message\", {\n      message: User\n    });\n    setMessage(\"\");\n    console.log(\"sousinn\");\n  };\n\n  //サーバーから受信\n  socket.on(\"received_message\", data => {\n    console.log(data);\n\n    //リストにデータを追加\n    setList([...list, data]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"direct\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Direct, \"FDO6AfvlQj3U98WG0HWh1PRCSls=\");\n_c = Direct;\nvar _c;\n$RefreshReg$(_c, \"Direct\");","map":{"version":3,"names":["React","useContext","useState","io","AuthContext","socket","Direct","user","message","setMessage","list","setList","handleSendMessage","User","_id","emit","console","log","on","data"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/direct/Direct.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport \"./Direct.css\"\nimport io from \"socket.io-client\"\nimport { AuthContext } from '../../state/AuthContext';\n//通信したいURLを指定\nconst socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\n\nexport default function Direct() {\n  const { user } = useContext(AuthContext)\n\n  const [message, setMessage] = useState(\"\");\n  const [list, setList] = useState([])\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    }\n    //serverへ送信\n    socket.emit(\"send_message\", {message: User});\n    setMessage(\"\");\n    console.log(\"sousinn\")\n  }\n\n  //サーバーから受信\n  socket.on(\"received_message\", (data) => {\n    console.log(data);\n    \n    //リストにデータを追加\n    setList([...list, data])\n  })\n\n  return (\n    <div className=\"direct\">\n      <div className=\"container\">\n        \n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,cAAc;AACrB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,WAAW,QAAQ,yBAAyB;AACrD;AAAA;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;AAC1C;AACA;;AAEA,eAAe,SAASG,MAAM,GAAG;EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC;EAExC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMU,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,GAAG,EAAEP,IAAI,CAACO,GAAG;MACbN,OAAO,EAAEA;IACX,CAAC;IACD;IACAH,MAAM,CAACU,IAAI,CAAC,cAAc,EAAE;MAACP,OAAO,EAAEK;IAAI,CAAC,CAAC;IAC5CJ,UAAU,CAAC,EAAE,CAAC;IACdO,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;;EAED;EACAZ,MAAM,CAACa,EAAE,CAAC,kBAAkB,EAAGC,IAAI,IAAK;IACtCH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;;IAEjB;IACAR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAES,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAK,SAAS,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA;EAEpB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAjCuBb,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}