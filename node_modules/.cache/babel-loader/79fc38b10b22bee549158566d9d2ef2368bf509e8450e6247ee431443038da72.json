{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/pages/rooms/Rooms.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Rooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Rooms(_ref) {\n  _s();\n  let {\n    state\n  } = _ref;\n  const roomId = useParams().room_id;\n  console.log(roomId);\n  //通信したいURLを指定\n  const socket = io(\"http://localhost:5000\");\n  //CORSの関係でエラーが出るので\n  //サーバー側で処理を書く\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [message, setMessage] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    };\n    //serverへ送信\n    socket.emit(\"send_message\", {\n      message: User\n    });\n    setMessage(\"\");\n    console.log(\"sousinn\");\n  };\n\n  //サーバーから受信\n  socket.on(\"received_message\", data => {\n    console.log(data);\n\n    //リストにデータを追加\n    setList([...list, data]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Rooms\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Rooms, \"FK8z1CotQYLRnj8kwfqnEJCugU8=\", false, function () {\n  return [useParams];\n});\n_c = Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","useParams","Rooms","state","roomId","room_id","console","log","socket","io","user","useContext","AuthContext","message","setMessage","useState","list","setList","handleSendMessage","User","_id","emit","on","data"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/rooms/Rooms.jsx"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\n\nimport \"./Rooms.css\"\n\nexport default function Rooms({ state }) {\n\n  const roomId = useParams().room_id\n\n  console.log(roomId);\n  //通信したいURLを指定\nconst socket = io(\"http://localhost:5000\");\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\n\n  const { user } = useContext(AuthContext)\n\n  const [message, setMessage] = useState(\"\");\n  const [list, setList] = useState([])\n\n  //送信した段階でAPIを叩いてDBに登録\n  const handleSendMessage = () => {\n    const User = {\n      _id: user._id,\n      message: message\n    }\n    //serverへ送信\n    socket.emit(\"send_message\", {message: User});\n    setMessage(\"\");\n    console.log(\"sousinn\")\n  }\n\n  //サーバーから受信\n  socket.on(\"received_message\", (data) => {\n    console.log(data);\n    \n    //リストにデータを追加\n    setList([...list, data])\n  })\n  \n  return (\n    <div>Rooms</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,aAAa;AAAA;AAEpB,eAAe,SAASC,KAAK,OAAY;EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC;EAErC,MAAMC,MAAM,GAAGH,SAAS,EAAE,CAACI,OAAO;EAElCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnB;EACF,MAAMI,MAAM,GAAGC,EAAE,CAAC,uBAAuB,CAAC;EAC1C;EACA;;EAEE,MAAM;IAAEC;EAAK,CAAC,GAAGC,UAAU,CAACC,WAAW,CAAC;EAExC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMG,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,GAAG,EAAEV,IAAI,CAACU,GAAG;MACbP,OAAO,EAAEA;IACX,CAAC;IACD;IACAL,MAAM,CAACa,IAAI,CAAC,cAAc,EAAE;MAACR,OAAO,EAAEM;IAAI,CAAC,CAAC;IAC5CL,UAAU,CAAC,EAAE,CAAC;IACdR,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;;EAED;EACAC,MAAM,CAACc,EAAE,CAAC,kBAAkB,EAAGC,IAAI,IAAK;IACtCjB,OAAO,CAACC,GAAG,CAACgB,IAAI,CAAC;;IAEjB;IACAN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEO,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,oBACE;IAAA,UAAK;EAAK;IAAA;IAAA;IAAA;EAAA,QAAM;AAEpB;AAAC,GAtCuBrB,KAAK;EAAA,QAEZD,SAAS;AAAA;AAAA,KAFFC,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}