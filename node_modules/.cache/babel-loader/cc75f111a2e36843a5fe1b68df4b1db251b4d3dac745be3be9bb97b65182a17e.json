{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport SingleMessage from '../../components/sendmessage/SingleMessage';\nimport { AuthContext } from '../../state/AuthContext';\nimport \"./TalkRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TalkRoom() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // input欄の管理\n  const [message, setMessage] = useState(\"\");\n  // トーク履歴の管理\n  const [list, setList] = useState([]);\n  const roomId = useParams().room_id;\n  const [id, setId] = useState('roomId');\n\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n    //通信したいURLを指定\n    //CORSの関係でエラーが出るので\n    //サーバー側で処理を書く\n    const socket = io(\"http://localhost:5000\");\n    /*#__PURE__*/_jsxDEV(\"socket\", {\n      className: \"join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)(id);\n\n    //このタイミングでDBから過去のトーク履歴をもってきてほしいと送信\n    socket.emit('join', roomId);\n\n    //いままでのトーク履歴がこれに返る\n    socket.on('init', messages => {\n      setList(messages);\n    });\n\n    //自分や相手がメッセージを送信した際にここに返る\n    // socket.on('addMessage', (message) => {\n    //   setList(list => [...list, message]);\n    // })\n    //一旦通信を切っている\n    return () => {\n      socket.disconnect();\n    };\n  }, [roomId]);\n  // console.log(data)\n\n  //通信したいURLを指定\n  const socket = io(\"http://localhost:5000\");\n  const handleInputMessage = e => {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n  socket.on('addMessage', async message => {\n    console.log(\"返ってきました\");\n    setList(list => [...list, message]);\n  });\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const User = {\n      senderId: user._id,\n      message: message,\n      roomId: roomId\n    };\n    socket.emit('send_message', User);\n    setMessage(\"\");\n    console.log(\"sousinn\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"talkroom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInputButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u306B\\u3061\\u3083\\u3042\\u30FB\\u30FB\\u30FB\\u3063\\u3068\",\n          onChange: handleInputMessage,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: message === \"\" ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,1)\"\n          },\n          disabled: message === \"\",\n          onClick: handleSendMessage,\n          children: \"\\u9001\\u4FE1\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), list.map(item => /*#__PURE__*/_jsxDEV(SingleMessage, {\n        item: item\n      }, item.message, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(TalkRoom, \"4sXj868SwyzWGeUPqjaK6dxIdQw=\", false, function () {\n  return [useParams];\n});\n_c = TalkRoom;\nvar _c;\n$RefreshReg$(_c, \"TalkRoom\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useState","useParams","io","SingleMessage","AuthContext","TalkRoom","user","message","setMessage","list","setList","roomId","room_id","id","setId","socket","emit","on","messages","disconnect","handleInputMessage","e","preventDefault","target","value","console","log","handleSendMessage","User","senderId","_id","backgroundColor","map","item"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport SingleMessage from '../../components/sendmessage/SingleMessage';\nimport { AuthContext } from '../../state/AuthContext';\n\nimport \"./TalkRoom.css\"\n  \n\nexport default function TalkRoom() {\n\n  \n\n\n  const { user } = useContext(AuthContext)\n\n  // input欄の管理\n  const [message, setMessage] = useState(\"\");\n  // トーク履歴の管理\n  const [list, setList] = useState([])\n\n  const roomId = useParams().room_id\n\n  const [id, setId] = useState('roomId')\n\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n    //通信したいURLを指定\n    //CORSの関係でエラーが出るので\n    //サーバー側で処理を書く\n    const socket = io(\"http://localhost:5000\");\n\n    <socket className=\"join\"></socket>(id);\n    \n\n    //このタイミングでDBから過去のトーク履歴をもってきてほしいと送信\n    socket.emit('join', roomId);\n\n    //いままでのトーク履歴がこれに返る\n    socket.on('init', (messages) => {\n      setList(messages);\n    })\n\n    //自分や相手がメッセージを送信した際にここに返る\n    // socket.on('addMessage', (message) => {\n    //   setList(list => [...list, message]);\n    // })\n    //一旦通信を切っている\n    return () => {\n      socket.disconnect();\n    };\n    \n  }, [roomId])\n  // console.log(data)\n\n  //通信したいURLを指定\n  const socket = io(\"http://localhost:5000\");\n\n  const handleInputMessage = (e) => {\n    e.preventDefault();\n    setMessage(e.target.value)\n  }\n\n  socket.on('addMessage', async(message) => {\n    console.log(\"返ってきました\")\n    setList(list => [...list, message]);\n  })\n\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const User = {\n      senderId: user._id,\n      message: message,\n      roomId: roomId \n    }\n    socket.emit('send_message', User);\n    setMessage(\"\");\n    console.log(\"sousinn\")\n  }\n\n  \n  return (\n    <div className=\"talkroom\">\n      <div className=\"container\">\n        <h2>チャット</h2>\n        <div className=\"chatInputButton\">\n          <input type=\"text\" placeholder='にちゃあ・・・っと' onChange={handleInputMessage} value={message}/>\n          <button style={{ backgroundColor: message === \"\" ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,1)\"}} disabled={message === \"\"} onClick={handleSendMessage}>送信する</button>\n        </div>\n        {list.map((item) => (\n          <SingleMessage key={item.message} item={item} />\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}