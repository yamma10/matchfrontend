{"ast":null,"code":"import _toConsumableArray from\"/home/oshimayamato/practice/matching/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/oshimayamato/practice/matching/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/oshimayamato/practice/matching/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/oshimayamato/practice/matching/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import React,{useContext,useEffect,useRef,useState}from'react';import{useParams}from'react-router-dom';import{io}from'socket.io-client';import SingleMessage from'../../components/sendmessage/SingleMessage';import{AuthContext}from'../../state/AuthContext';import styles from\"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";import{MainContainer,ChatContainer,MessageList,Message,MessageInput,Avatar}from\"@chatscope/chat-ui-kit-react\";import\"./TalkRoom.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TalkRoom(){var _useContext=useContext(AuthContext),user=_useContext.user;// input欄の管理\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];// トーク履歴の管理\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],setList=_useState4[1];var roomId=useParams().room_id;var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),room=_useState6[0],setRoom=_useState6[1];var _useState7=useState(roomId),_useState8=_slicedToArray(_useState7,2),id=_useState8[0],setId=_useState8[1];var messageContainerRef=useRef(null);// 受け取れた\n// console.log(roomId);\nuseEffect(function(){var fetchRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var Room;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/message/\".concat(id));case 2:Room=_context.sent;// console.log(Room.data)\nsetRoom(Room.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function fetchRoom(){return _ref.apply(this,arguments);};}();fetchRoom();//通信したいURLを指定\n//CORSの関係でエラーが出るので\n//サーバー側で処理を書く\nvar socket=io(\"http://localhost:5000\");// console.log(\"a\")\n// console.log(id);\n//このタイミングでDBから過去のトーク履歴をもってきてほしいと送信\nsocket.emit('join',roomId);//いままでのトーク履歴がこれに返る\nsocket.on('init',function(messages){setList(messages);});//自分や相手がメッセージを送信した際にここに返る\nsocket.on('addMessage',function(message){setList(function(list){return[].concat(_toConsumableArray(list),[message]);});});// messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n//一旦通信を切っている\nreturn function(){socket.disconnect();};},[]);//[roomId,list]\n// console.log(data)\n//通信したいURLを指定\nvar socket=io(\"http://localhost:5000\");var handleInputMessage=function handleInputMessage(e){e.preventDefault();setMessage(e.target.value);};// socket.on('addMessage', async(message) => {\n//   console.log(\"返ってきました\")\n//   setList(list => [...list, message]);\n// })\nvar handleSendMessage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var User;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:e.preventDefault();User={senderId:user._id,message:message,roomId:roomId};socket.emit('send_message',User);setMessage(\"\");console.log(\"sousinn\");case 5:case\"end\":return _context2.stop();}},_callee2);}));return function handleSendMessage(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"talkroom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:user.username===room.studentName?room.teacherName:room.studentName}),/*#__PURE__*/_jsx(\"div\",{className:\"MessageArea\",ref:messageContainerRef,children:list.map(function(item,index){return/*#__PURE__*/_jsx(SingleMessage,{item:item},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatInputButton\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\",onChange:handleInputMessage,value:message}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:message===\"\"?\"rgba(0,0,0,0.5)\":\"rgba(0,0,0,1)\"},disabled:message===\"\",onClick:handleSendMessage,children:\"\\u9001\\u4FE1\\u3059\\u308B\"})]})]})});}// export default function TalkRoom() {\n//   return (\n//     <div style={{ position:\"relative\", height: \"500px\" }}>\n//       <MainContainer>\n//         <ChatContainer>       \n//           <MessageList>\n//             <Message model={{\n//                     message: \"Hello my friend\",\n//                     sentTime: \"just now\",\n//                     sender: \"Joe\"\n//                     }} />\n//             </MessageList>\n//           <MessageInput placeholder=\"Type message here\" />        \n//         </ChatContainer>\n//       </MainContainer>\n//     </div>\n//   )\n// }","map":{"version":3,"names":["axios","React","useContext","useEffect","useRef","useState","useParams","io","SingleMessage","AuthContext","styles","MainContainer","ChatContainer","MessageList","Message","MessageInput","Avatar","TalkRoom","user","message","setMessage","list","setList","roomId","room_id","room","setRoom","id","setId","messageContainerRef","fetchRoom","get","Room","data","socket","emit","on","messages","disconnect","handleInputMessage","e","preventDefault","target","value","handleSendMessage","User","senderId","_id","console","log","username","studentName","teacherName","map","item","index","backgroundColor"],"sources":["/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport SingleMessage from '../../components/sendmessage/SingleMessage';\nimport { AuthContext } from '../../state/AuthContext';\n\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n  Avatar\n} from \"@chatscope/chat-ui-kit-react\";\n\nimport \"./TalkRoom.css\"\n  \n\nexport default function TalkRoom() {\n\n\n  const { user } = useContext(AuthContext)\n\n  // input欄の管理\n  const [message, setMessage] = useState(\"\");\n  // トーク履歴の管理\n  const [list, setList] = useState([])\n\n  const roomId = useParams().room_id\n\n  const [room , setRoom] = useState([]);\n\n  const [id, setId] = useState(roomId)\n\n  const messageContainerRef = useRef(null);\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n\n    const fetchRoom = async () => {\n      const Room = await axios.get(`/message/${id}`);\n      // console.log(Room.data)\n      setRoom(Room.data);\n    }\n    fetchRoom();\n\n\n\n    //通信したいURLを指定\n    //CORSの関係でエラーが出るので\n    //サーバー側で処理を書く\n    const socket = io(\"http://localhost:5000\");\n\n    // console.log(\"a\")\n    // console.log(id);\n    \n\n    //このタイミングでDBから過去のトーク履歴をもってきてほしいと送信\n    socket.emit('join', roomId);\n\n    //いままでのトーク履歴がこれに返る\n    socket.on('init', (messages) => {\n      setList(messages);\n    })\n\n    \n\n\n    //自分や相手がメッセージを送信した際にここに返る\n    socket.on('addMessage', (message) => {\n      setList(list => [...list, message]);\n    })\n\n    // messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n\n    //一旦通信を切っている\n    return () => {\n      socket.disconnect();\n    };\n\n    \n    \n  }, [])//[roomId,list]\n  // console.log(data)\n\n\n\n  //通信したいURLを指定\n  const socket = io(\"http://localhost:5000\");\n\n  const handleInputMessage = (e) => {\n    e.preventDefault();\n    setMessage(e.target.value)\n  }\n\n  // socket.on('addMessage', async(message) => {\n  //   console.log(\"返ってきました\")\n  //   setList(list => [...list, message]);\n  // })\n\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const User = {\n      senderId: user._id,\n      message: message,\n      roomId: roomId \n    }\n    socket.emit('send_message', User);\n    setMessage(\"\");\n    console.log(\"sousinn\")\n  }\n  \n  return (\n    <div className=\"talkroom\">\n      <div className=\"container\">\n        <h2>{ \n            user.username === room.studentName\n            ? room.teacherName\n            : room.studentName\n          }\n        </h2>\n        <div className='MessageArea' ref={messageContainerRef}>\n          {list.map((item,index) => (\n          <SingleMessage key={index} item={item} />\n        ))}\n        </div>\n        \n        <div className=\"chatInputButton\">\n          <input type=\"text\" placeholder='メッセージを入力' onChange={handleInputMessage} value={message}/>\n          <button style={{ backgroundColor: message === \"\" ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,1)\"}} disabled={message === \"\"} onClick={handleSendMessage}>送信する</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\n// export default function TalkRoom() {\n//   return (\n//     <div style={{ position:\"relative\", height: \"500px\" }}>\n//       <MainContainer>\n//         <ChatContainer>       \n//           <MessageList>\n//             <Message model={{\n//                     message: \"Hello my friend\",\n//                     sentTime: \"just now\",\n//                     sender: \"Joe\"\n//                     }} />\n//             </MessageList>\n//           <MessageInput placeholder=\"Type message here\" />        \n//         </ChatContainer>\n//       </MainContainer>\n//     </div>\n//   )\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}