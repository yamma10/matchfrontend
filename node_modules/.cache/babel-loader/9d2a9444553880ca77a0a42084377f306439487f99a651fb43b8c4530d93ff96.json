{"ast":null,"code":"var _jsxFileName = \"/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false\n};\n\n//グローバルコンテキストを作成\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //state.userが変わるごとにユーザー情報をlocalStorageにセットする\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    ｓｄ: true,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","AuthReducer","initialState","user","JSON","parse","localStorage","getItem","isFetching","error","AuthContext","AuthContextProvider","children","state","dispatch","setItem","stringify"],"sources":["/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態\nconst initialState = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false,\n};\n\n//グローバルコンテキストを作成\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer,initialState);\n\n  //state.userが変わるごとにユーザー情報をlocalStorageにセットする\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}ｓｄ\n    >\n      {/* index.jsを<AuthContextProvider>で囲ったのでchildrenはApp.jsになる */}\n      {children}\n    </AuthContext.Provider>\n  )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC5D,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EACtDC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAACI,YAAY,CAAC;AAEtD,OAAO,MAAMS,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACC,WAAW,EAACC,YAAY,CAAC;;EAE9D;EACAH,SAAS,CAAC,MAAM;IACdO,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACV,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACU,KAAK,CAACV,IAAI,CAAC,CAAC;EAEhB,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLA,IAAI,EAAEU,KAAK,CAACV,IAAI;MAChBK,UAAU,EAAEK,KAAK,CAACL,UAAU;MAC5BC,KAAK,EAAEI,KAAK,CAACJ,KAAK;MAClBK;IACF,CAAE;IAAA,EAAE;IAAA,UAGHF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAA,GArBYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}