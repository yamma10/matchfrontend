[{"/home/oshimayamato/practice/matching/frontend/src/index.js":"1","/home/oshimayamato/practice/matching/frontend/src/App.js":"2","/home/oshimayamato/practice/matching/frontend/src/pages/home/Home.jsx":"3","/home/oshimayamato/practice/matching/frontend/src/pages/profile/Profile.jsx":"4","/home/oshimayamato/practice/matching/frontend/src/pages/login/Login.jsx":"5","/home/oshimayamato/practice/matching/frontend/src/pages/register/Register.jsx":"6","/home/oshimayamato/practice/matching/frontend/src/pages/top/Top.jsx":"7","/home/oshimayamato/practice/matching/frontend/src/components/topbar/Topbar.jsx":"8","/home/oshimayamato/practice/matching/frontend/src/components/sidebar/Sidebar.jsx":"9","/home/oshimayamato/practice/matching/frontend/src/components/rightbar/Rightbar.jsx":"10","/home/oshimayamato/practice/matching/frontend/src/components/timeline/Timeline.jsx":"11","/home/oshimayamato/practice/matching/frontend/src/components/post/Post.jsx":"12","/home/oshimayamato/practice/matching/frontend/src/components/share/Share.jsx":"13","/home/oshimayamato/practice/matching/frontend/src/pages/settings/Settings.jsx":"14","/home/oshimayamato/practice/matching/frontend/src/components/profiledesc/ProfileDesc.jsx":"15","/home/oshimayamato/practice/matching/frontend/src/components/toptopbar/Toptopbar.jsx":"16","/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js":"17","/home/oshimayamato/practice/matching/frontend/src/state/AuthReducer.js":"18","/home/oshimayamato/practice/matching/frontend/src/actionCalls.js":"19","/home/oshimayamato/practice/matching/frontend/src/pages/direct/RoomList.jsx":"20","/home/oshimayamato/practice/matching/frontend/src/components/room/Room.jsx":"21","/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx":"22","/home/oshimayamato/practice/matching/frontend/src/components/sendmessage/SingleMessage.jsx":"23"},{"size":354,"mtime":1674714292596,"results":"24","hashOfConfig":"25"},{"size":1393,"mtime":1675145665335,"results":"26","hashOfConfig":"25"},{"size":467,"mtime":1674024331685,"results":"27","hashOfConfig":"25"},{"size":1848,"mtime":1675177898915,"results":"28","hashOfConfig":"25"},{"size":3727,"mtime":1674536409648,"results":"29","hashOfConfig":"25"},{"size":5730,"mtime":1674638230237,"results":"30","hashOfConfig":"25"},{"size":675,"mtime":1674388480722,"results":"31","hashOfConfig":"25"},{"size":1963,"mtime":1675145665335,"results":"32","hashOfConfig":"25"},{"size":1924,"mtime":1675145665335,"results":"33","hashOfConfig":"25"},{"size":154,"mtime":1674024331685,"results":"34","hashOfConfig":"25"},{"size":2895,"mtime":1675168689075,"results":"35","hashOfConfig":"25"},{"size":3337,"mtime":1675145665335,"results":"36","hashOfConfig":"25"},{"size":2522,"mtime":1675145665335,"results":"37","hashOfConfig":"25"},{"size":9704,"mtime":1675169024845,"results":"38","hashOfConfig":"25"},{"size":1615,"mtime":1675177898915,"results":"39","hashOfConfig":"25"},{"size":1360,"mtime":1675145665335,"results":"40","hashOfConfig":"25"},{"size":988,"mtime":1674701771416,"results":"41","hashOfConfig":"25"},{"size":503,"mtime":1675145665345,"results":"42","hashOfConfig":"25"},{"size":712,"mtime":1675145665335,"results":"43","hashOfConfig":"25"},{"size":1583,"mtime":1675145665335,"results":"44","hashOfConfig":"25"},{"size":918,"mtime":1675145665335,"results":"45","hashOfConfig":"25"},{"size":4060,"mtime":1675239768771,"results":"46","hashOfConfig":"25"},{"size":813,"mtime":1675145665335,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"thde34",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"/home/oshimayamato/practice/matching/frontend/src/index.js",[],[],[],"/home/oshimayamato/practice/matching/frontend/src/App.js",[],[],"/home/oshimayamato/practice/matching/frontend/src/pages/home/Home.jsx",[],[],"/home/oshimayamato/practice/matching/frontend/src/pages/profile/Profile.jsx",["132","133"],[],"import React, { useContext, useEffect, useState } from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Timeline from '../../components/timeline/Timeline'\nimport Topbar from '../../components/topbar/Topbar'\nimport \"./style.css\"\nimport ProfileDesc from '../../components/profiledesc/ProfileDesc'\nimport axios from \"axios\"\nimport { useParams } from \"react-router-dom\";\n\n\n\nexport default function Profile({}) {\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n  \n  \n\n  const id = useParams().id\n  const [user, setUser] = useState({});\n  \n\n  //\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await axios.get(`/users/teacher/${id}`);\n      // console.log(response);\n      setUser(response.data);\n    };\n    fetchUser();\n  }, [id]);\n\n  console.log(user)\n  return (\n    <>\n      <Topbar />\n      <div className=\"profile\">\n        <Sidebar />\n        <div className=\"profileRight\">\n          <div className=\"profileRightTop\">\n            <div className=\"profileCover\">\n              <img\n                src={PUBLIC_FOLDER + \"/landscape/Image01.jpeg\"} alt=\"\" \n                className=\"profileCoverImg\"\n               />\n              <img src={user.profilePicture\n              ? PUBLIC_FOLDER + user.profilePicture\n              : PUBLIC_FOLDER + \"/person/noAvatar.png\"} alt=\"\" className=\"profileUserImg\" />\n            </div>\n            <div className=\"profileInfo\">\n              <div className=\"profileInfoName\">\n                {user.username}\n              </div>\n              <div className=\"profileInfoDesc\">\n                \n              </div>\n            </div>\n          </div>\n          <div className=\"profileRightBottom\">\n            <Timeline username={user.username}/>\n            <ProfileDesc  user={user}/>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/oshimayamato/practice/matching/frontend/src/pages/login/Login.jsx",["134","135","136","137","138","139"],[],"import React from 'react'\nimport \"./Login.css\"\nimport { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport 'react-tabs/style/react-tabs.css';\nimport { useRef } from 'react';\nimport { studentLoginCall, teacherLoginCall } from '../../actionCalls';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../state/AuthContext';\n\nexport default function Login() {\n\n\n  const StudentLogin = () => {\n    const email = useRef();\n    const password = useRef();\n\n    const { user, isFetching, error, dispatch} = useContext(AuthContext);\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      studentLoginCall(\n        {\n          email: email.current.value,\n          password: password.current.value,\n        }, \n        dispatch\n      );\n    };\n\n\n    return (\n      <div className=\"loginBottom\">\n          <form className=\"loginBox\" onSubmit={(e) => handleSubmit(e)}>\n            <p className=\"loginMsg\">\n              ログインはこちらから\n            </p>\n            <input\n              type=\"email\"\n              className=\"loginInput\"\n              placeholder=\"メールアドレス\"\n              required\n              ref={email}\n            />\n            <input\n              type=\"password\"\n              className=\"loginInput\"\n              placeholder=\"パスワード\"\n              required\n              minLength=\"6\"\n              ref={password}\n            />\n            <button className=\"loginButton\">\n              ログイン\n            </button>\n            <Link to=\"/register\" className='register' >\n              <button className=\"loginRegisterButton\">\n                アカウント作成\n              </button>\n            </Link>\n          </form>\n        </div>\n    )\n  }\n\n  const TeacherLogin = () => {\n    const email = useRef();\n    const password = useRef();\n    const { user, isFetching, error, dispatch} = useContext(AuthContext);\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      teacherLoginCall(\n        {\n          email: email.current.value,\n          password: password.current.value,\n        }, \n        dispatch\n      );\n    };\n\n    return (\n      <div className=\"loginBottom\">\n          <form className=\"loginBox\" onSubmit={(e) => handleSubmit(e)}>\n            <p className=\"loginMsg\">\n              ログインはこちらから\n            </p>\n            <input\n              type=\"email\"\n              className=\"loginInput\"\n              placeholder=\"メールアドレス\"\n              required\n              ref={email}\n            />\n            <input\n              type=\"password\"\n              className=\"loginInput\"\n              placeholder=\"パスワード\"\n              required\n              minLength=\"6\"\n              ref={password}\n            />\n            <button className=\"loginButton\">\n              ログイン\n            </button>\n            <Link to=\"/register\" className='register' >\n              <button className=\"loginRegisterButton\">\n                アカウント作成\n              </button>\n            </Link>\n          </form>\n        </div>\n    )\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <div className=\"loginTop\">\n          <h3 className=\"loginLogo\">タイトル</h3>\n        </div>\n        {/* ここからTabで囲む */}\n        <Tabs style={{textAlign: 'center'}}>\n          <TabList>\n            <Tab>生徒ログイン</Tab>\n            <Tab>教師ログイン</Tab>\n          </TabList>\n\n          <TabPanel>\n            <StudentLogin />\n          </TabPanel>\n          <TabPanel>\n            <TeacherLogin />\n          </TabPanel>\n        </Tabs>\n\n      </div>\n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/pages/register/Register.jsx",[],[],"/home/oshimayamato/practice/matching/frontend/src/pages/top/Top.jsx",[],[],"/home/oshimayamato/practice/matching/frontend/src/components/topbar/Topbar.jsx",["140","141"],[],"import React, { useContext } from 'react'\nimport { Chat, Notifications, Search } from \"@mui/icons-material\"\nimport \"./Topbar.css\"\nimport { Link } from \"react-router-dom\";\nimport { AuthContext }  from \"../../state/AuthContext\"\n\nexport default function Topbar() {\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  const {user} = useContext(AuthContext)\n\n  return (\n    <div className='topbarContainer'>\n      <div className=\"topbarLeft\">\n        <Link to=\"/home\" style={{ textDecoration: \"none\" }}>\n          <span className=\"logo\">\n            佐賀でサガそう\n          </span> \n        </Link>\n        \n      </div>\n      <div className=\"topbarCenter\">\n        <div className=\"searchbar\">\n          {/* <Search className=\"searchIcon\"/>\n          <input\n            type=\"text\" \n            className=\"searchInput\"\n            placeholder='キーワードを入力してください' /> */}\n        </div>\n      </div>\n      <div className=\"topbarRight\">\n        <div className=\"topbarItemIcons\">\n          <div className=\"topbarIconItem\">\n            <Link to=\"/direct\" style={{ textDecoration: \"none\", color: \"black\"}} >\n              <Chat />\n            </Link>\n            {/* <span className=\"topbarIconBadge\">1</span> */}\n          </div>\n          <div className=\"topbarIconItem\">\n            {/* <Notifications />\n            <span className=\"topbarIconBadge\">2</span> */}\n          </div>\n          {user.type \n          ? <Link to={`/profile/${user._id}`} type=\"text/css\">\n            <img src={ user.profilePicture \n              ? PUBLIC_FOLDER + user.profilePicture\n              : PUBLIC_FOLDER + \"/person/noAvatar.png\"\n            }alt=\"\" className=\"topbarImg\" />\n          </Link> \n          : <img src={ user.profilePicture \n              ? PUBLIC_FOLDER + user.profilePicture\n              : PUBLIC_FOLDER + \"/person/noAvatar.png\"\n            }alt=\"\" className=\"topbarImg\" /> }\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/oshimayamato/practice/matching/frontend/src/components/sidebar/Sidebar.jsx",[],[],"/home/oshimayamato/practice/matching/frontend/src/components/rightbar/Rightbar.jsx",[],[],"/home/oshimayamato/practice/matching/frontend/src/components/timeline/Timeline.jsx",["142","143"],[],"import React, { useContext, useEffect, useState } from 'react'\nimport Post from '../post/Post';\nimport Share from '../share/Share';\nimport \"./Timeline.css\";\nimport axios from \"axios\"\nimport { AuthContext } from '../../state/AuthContext';\nimport Pagination from \"react-paginate\";\n\nexport default function Timeline({ username }) {\n  const [posts, setPosts] = useState([]);\n  //現在のページ\n  const [currentPage, setCurrentPage] = useState(1);\n  //1ページあたりに表示される投稿数\n  const [postsPerPage] = useState(5);\n\n  const { user } = useContext(AuthContext)\n  \n  //投稿をとってくる\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = username \n      ? await axios.get(`/posts/profile/${username}`) //プロフィールの場合\n      : await axios.get(`/posts/timeline/${user._id}`);//ホームの場合\n      \n      setPosts(\n        response.data.sort((post1, post2) => {\n        return new Date(post2.createdAt) - new Date(post1.createdAt);\n      })\n      );\n      // console.log(posts)\n    };\n    fetchPosts();\n  }, [username]);\n\n  //usernameがあるとき・・・username==user.username\n  //ないとき・・・typeがtrue\n  const judge = () => {\n    if(username){\n      if(username==user.username && user.type) {\n        return true;\n      }else {\n        return false;\n      }\n    } else {\n      if(user.type){\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  // console.log(posts.length)\n\n  const handlePageChange = (e) => {\n    setCurrentPage(e.selected + 1);\n  }\n\n  //現在のページに表示する投稿を取得する\n\n  //現在のページの最後の投稿のインデックス\n  const indexOfLastPost = currentPage * postsPerPage;\n  //現在のページの最初の投稿のインデックス\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  //現在のページに表示する投稿の配列\n  const currentPosts = posts.slice(indexOfFirstPost,indexOfLastPost);\n\n  return (\n    <div className=\"timeline\">\n      \n      <div className=\"timelineWrapper\">\n        { judge()\n        ? <Share />\n        : \"\"\n        }\n        \n        {currentPosts.map((post) => (\n          <Post post={post} key={post._id} />))\n        }\n      </div>\n      {\n        posts.length\n        ? (posts \n          ? <Pagination\n          previousLabel={\"前のページ\"}\n          nextLabel={\"次のページ\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={Math.ceil(posts.length/postsPerPage)}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={handlePageChange}\n          containerClassName={\"pagination\"}\n          subContainerClassName={\"pages pagination\"}\n          activeClassName={\"active\"}\n        />\n          : \"\"\n        )\n        : <p>まだ投稿がありません</p>\n      }\n      \n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/components/post/Post.jsx",["144"],[],"import { Favorite, MoreVert } from '@mui/icons-material'\nimport React, { useEffect, useState } from 'react'\nimport \"./Post.css\"\nimport axios from \"axios\"\nimport {format} from \"timeago.js\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../state/AuthContext';\n\nexport default function Post({ post }) {\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  const navigation = useNavigate();\n  \n\n  const [like, setLike ] = useState(post.likes.length);\n  const [ isLiked, setIsLiked ] = useState(false);\n  const [user, setUser] = useState({});\n\n  //自分\n  const { user: loginUser } = useContext(AuthContext);\n\n  \n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await axios.get(`/users/teacher/${post.userId}`);\n      // console.log(response)\n      setUser(response.data);\n    };\n    fetchUser();\n  }, []);\n\n  const handleLike = async () => {\n    try {\n      //いいねのAPIを叩いていく\n      await axios.put(`/posts/${post._id}/like`, {userId: loginUser._id});\n    } catch (err) {\n    }\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  }\n  \n  const handleSubmit = async () => {\n    try {\n\n      const createRoom = {\n        student_id: loginUser._id,\n        teacher_id: user._id,\n        studentName: loginUser.username,\n        teacherName: user.username\n      }\n\n      const room = await axios.post(\"/message/room\", createRoom);\n      const room_id = room.data._id\n\n    \n      navigation(`/rooms/${room_id}`)\n    } catch (err) {\n      alert(err.response.data)\n    }\n  }\n\n  return (\n    <div className='post'>\n      <div className=\"postWrapper\">\n        <div className=\"postTop\">\n          <div className=\"postTopLeft\">\n            <Link to={`/profile/${user._id}`}>\n              <img \n                src={\n                  user.profilePicture \n                  ? PUBLIC_FOLDER + user.profilePicture \n                  : PUBLIC_FOLDER + \"/person/noAvatar.png\"\n                } \n                alt=\"\" className=\"postProfileImg\" \n              />\n            </Link>\n            <span className=\"postUsername\">\n              {user.username}\n            </span>\n            <span className=\"postDate\">\n              {format(post.createdAt)}\n            </span>\n          </div>\n          <div className=\"postTopRight\">\n            <MoreVert />\n          </div>\n        </div>\n        <div className=\"postCenter\">\n          <span className=\"postText\">\n            {post.desc}\n          </span>\n          {post.img \n          ? <img src={ PUBLIC_FOLDER + post.img}  className=\"postImg\" alt=\"\" />\n          :  \"\"}\n        </div>\n        <div className=\"postBottom\">\n          <div className=\"postBottomLeft\">\n            <Favorite htmlColor='red' onClick={\n              () => handleLike()\n            }/>\n            <span className=\"postLikeCounter\">\n              {like}人がいいねを押しました\n            </span>\n          </div>\n          <div className=\"postBottomRight\">\n            { loginUser.type\n              ?  \"\"\n              : <span className=\"postCommentText\" onClick={(e) => handleSubmit(e)}>\n            \n                  コンタクトをとる\n                </span>\n            }\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/components/share/Share.jsx",["145","146"],[],"import { Image } from '@mui/icons-material'\nimport React, { useContext, useRef, useState } from 'react'\nimport \"./Share.css\"\nimport { AuthContext } from \"../../state/AuthContext\";\nimport axios from 'axios';\n\nexport default function Share() {\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  const { user } = useContext(AuthContext);\n  const desc = useRef();\n\n  const [file, setFile] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value,\n    };\n\n    if(file) {\n      //キーとバリューを合わせてデータとして持っておく\n      const data = new FormData();\n      //同じ画像がアップロードされることも考えられるので現在時刻を付与する\n      const fileName = Date.now() + file.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", file);\n      newPost.img = fileName;\n\n      try {\n        //画像アップロード\n        await axios.post(\"/upload\", data);\n      } catch(err) {\n        console.log(err);\n      }\n    }\n\n    try {\n      await axios.post(\"/posts\", newPost);\n      window.location.reload();\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <img src={\n            user.profilePicture\n              ? PUBLIC_FOLDER + user.profilePicture\n              : PUBLIC_FOLDER + \"/person/noAvatar.png\"\n          }alt=\"\" className=\"shareProfileImg\" />\n          <textarea cols=\"20\" rows=\"5\" className=\"shareInput\" placeholder='投稿内容' ref={desc} ></textarea>\n        </div>\n        <hr className=\"shareHr\" />\n        <form className=\"shareButtons\" onSubmit={(e) => handleSubmit(e)}>\n          <div className=\"shareOptions\">\n            <label className=\"shareOption\" htmlFor=\"file\">\n              {/* <Image\n                className=\"shareIcon\" htmlColor='blue'\n                />\n              <span className=\"shareOptionText\">\n                写真\n              </span>\n              <input\n                 type=\"file\" \n                 id =\"file\" \n                 accept=\".png, .jpeg, .jpg\" \n                 style={{display: \"none\"}}\n                 onChange={(e) => setFile(e.target.files[0])}\n              /> */}\n            </label>\n          </div>\n          <button className=\"shareButton\" type=\"submit\">\n            投稿\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/pages/settings/Settings.jsx",["147"],[],"import { convertLength } from '@mui/material/styles/cssUtils';\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../state/AuthContext';\nimport \"./Settings.css\"\n\n\n\n\nexport default function Settings() {\n  const { user } = useContext(AuthContext)\n\n  const navigation = useNavigate();\n\n\n  const [method, setMethod] = useState(user.method);\n  const [username, setuserName] = useState(user.username);\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState(user.password);\n  const [city, setCity] = useState(user.city);\n\n  const [subject, setSubject] = useState(user.subject);\n\n  // プロフィール画像\n  const [file, setFile] = useState(user.profilePicture);\n\n  // console.log(city);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if(file) {\n      //キーとバリューを合わせてデータとして持っておく\n      const data = new FormData();\n      //同じ画像がアップロードされることも考えられるので現在時刻を付与する\n      const fileName = Date.now() + file.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", file);\n      setFile(fileName);\n\n      try {\n        //画像アップロード\n        await axios.post(\"/upload\", data);\n        // setFile(fileName);\n      } catch(err) {\n        console.log(err);\n      }\n    }\n\n    try {\n      const newUser = {\n        _id: user._id,\n        profilePicture: file,\n        username: username,\n        email: email,\n        password: password,\n        city: city,\n        subject: subject,\n        method: method,\n        type: user.type\n      }\n      // console.log(newUser);\n      if(user.type) {\n        await axios.put(`users/teacher/${newUser._id}`, newUser);\n        \n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n      } else {\n        await axios.put(`users/student/${user._id}`, newUser);\n        // studentUpdate(newUser,dispatch);\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n      }\n      \n      navigation(\"/home\");\n    } catch (err) {\n      console.log(err);\n    }\n    \n  }\n\n\n\n  \n\n  const SettingTeacher = () => {\n    return (\n      <div className=\"settings\">\n        <div className=\"settingsWrapper\">\n          <h1 className=\"settingTop\">\n            設定\n          </h1>\n          <form className=\"settingBottom\" onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"settingItems\">\n              <div className='settingItem' >\n                <p>名前</p>\n                <input\n                  type=\"text\"\n                  className=\"settingInput\"\n                  required\n                  onChange={(e) => setuserName(e.target.value)}\n                  value={username}\n                />\n              </div>   \n              <div className='settingItem' >\n                <p>メールアドレス</p>\n                <input\n                  type=\"email\"\n                  className=\"settingInput\"\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className='settingItem' >\n                <p>パスワード</p>\n                <input\n                  type=\"password\"\n                  className=\"settingInput\" \n                  required\n                  minLength=\"6\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n              </div>\n              <div className='settingItem' >\n                <p>住まい（市まで）</p>\n                <select \n                className='settingInput'\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n                >\n                  <option value={\"saga\"}>\n                    佐賀市\n                  </option>\n                  <option value={\"karatsu\"}>\n                    唐津市\n                  </option>\n                  <option value={\"tosu\"}>\n                    鳥栖市\n                  </option>\n                  <option value={\"taku\"}>\n                    多久市\n                  </option>\n                  <option value={\"imari\"}>\n                    伊万里市\n                  </option>\n                  <option value={\"takeo\"}>\n                    武雄市\n                  </option>\n                  <option value={\"kashima\"}>\n                    鹿島市\n                  </option>\n                  <option value={\"ogi\"}>\n                    小城市\n                  </option>\n                  <option value={\"ureshino\"}>\n                    嬉野市\n                  </option>\n                  <option value={\"kanzaki\"}>\n                    神崎市\n                  </option>\n                </select>\n              </div>\n              <div className='settingItem' >\n                <p>対応可能な教科</p>\n                <input\n                  type=\"text\"\n                  className=\"settingInput\"\n                  onChange={(e) => setSubject(e.target.value)}\n                  value={subject}\n                />\n              </div>\n              {/* <div className=\"settingItem\">\n                <p>プロフィール画像を設定する</p>\n                <input\n                  type=\"file\" \n                  id =\"file\" \n                  accept=\".png, .jpeg, .jpg\"\n                  \n                  onChange={(e) => setFile(e.target.files[0])}\n                />\n              </div> */}\n              <div className='settingItem' >\n                <p>授業形態</p>\n                <select\n                 className='settingInput'\n                 value={method}\n                 onChange={(e) => setMethod(e.target.value)}>\n                  <option value={false}>\n                     対面\n                  </option>\n                  <option value={true}>\n                    オンラインも可能\n                  </option>     \n                </select>\n              </div>\n              <button className=\"loginButton\">\n                変更する\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  const SettingStudent = () => {\n    return (\n      <div className=\"settings\">\n        <div className=\"settingsWrapper\">\n          <h1 className=\"settingTop\">\n            設定\n          </h1>\n            <form className=\"settingBottom\" onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"settingItems\">\n              <div className='settingItem' >\n                <p>名前</p>\n                <input\n                  type=\"text\"\n                  className=\"settingInput\"\n                  onChange={(e) => setuserName(e.target.value)}\n                  value={username}\n                />\n              </div>   \n              <div className='settingItem' >\n                <p>メールアドレス</p>\n                <input\n                  type=\"email\"\n                  className=\"settingInput\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className='settingItem' >\n                <p>パスワード</p>\n                <input\n                  type=\"password\"\n                  className=\"settingInput\" \n                  required\n                  minLength=\"6\"  \n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n              </div>\n              <div className='settingItem' >\n                <p>住まい（市まで）</p>\n                <select \n                className='settingInput'\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n                >\n                  <option value={\"saga\"}>\n                    佐賀市\n                  </option>\n                  <option value={\"karatsu\"}>\n                    唐津市\n                  </option>\n                  <option value={\"tosu\"}>\n                    鳥栖市\n                  </option>\n                  <option value={\"taku\"}>\n                    多久市\n                  </option>\n                  <option value={\"imari\"}>\n                    伊万里市\n                  </option>\n                  <option value={\"takeo\"}>\n                    武雄市\n                  </option>\n                  <option value={\"kashima\"}>\n                    鹿島市\n                  </option>\n                  <option value={\"ogi\"}>\n                    小城市\n                  </option>\n                  <option value={\"ureshino\"}>\n                    嬉野市\n                  </option>\n                  <option value={\"kanzaki\"}>\n                    神崎市\n                  </option>\n                </select>\n              </div>\n              <div className='settingItem' >\n                <p>お探しの授業形態</p>\n                <select value={method}\n                 onChange={(e) => setMethod(e.target.value)}className='settingInput'\n                >\n                  <option value={false}>\n                     対面\n                  </option>\n                  <option value={true}>\n                    オンラインも可能\n                  </option>\n                </select>\n              </div>\n              <button className=\"loginButton\">\n                変更する\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {user.type ? SettingTeacher() : SettingStudent()}\n    </>\n  )\n}\n",[],"/home/oshimayamato/practice/matching/frontend/src/components/profiledesc/ProfileDesc.jsx",["148"],[],"import React from 'react'\nimport \"./ProfileDesc.css\"\n\n//今はどちらの構成も見るためにstateを渡しているが最終的にはユーザの種別を渡して判断するようにする\n//文字数に制限を設ける\n// 一言の文字数は300字までにする\nexport default function ProfileDesc({user}) {\n  console.log(user)\n  function checkcity(user) {\n    switch(user.city) {\n      case \"saga\": \n        return \"佐賀市\"\n      case \"karatsu\":\n        return \"唐津市\"\n      case \"tosu\":\n        return \"鳥栖市\"\n      case \"taku\":\n        return \"多久市\"\n      case \"imari\":\n        return \"伊万里市\"\n      case \"kashima\":\n        return \"鹿島市\"\n      case \"ogi\":\n        return \"小城市\"\n      case \"ureshino\":\n        return \"嬉野市\"\n      case \"kanzaki\":\n        return \"神崎市\"\n    }\n  }\n  const city = checkcity(user)\n  console.log(city);\n\n  function checkMethod (user) {\n    if (user.method) {\n      return \"オンラインも可能\"\n    } else {\n      return \"対面授業\"\n    }\n  }\n  const method = checkMethod(user);\n\n  const teacherdesc = () => {\n    return (\n      <>\n        <div className=\"type\">\n          お住まい（市まで）:<br className='hidden' />\n          {city}\n        </div>\n        <div className=\"type\">\n          対応できる教科: {user.subject}\n        </div>\n        <div className=\"type\">\n          授業形態:<br/>    \n          <span>{method}</span> \n        </div>\n      </>\n    )\n  }\n\n\n\n  return (\n    <div className=\"profiledesc\">\n      <div className=\"descWrapper\">\n        {teacherdesc()}\n      </div>\n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/components/toptopbar/Toptopbar.jsx",["149"],[],"\nimport styles from \"./Toptopbar.module.css\"\nimport { Search } from \"@mui/icons-material\"\nimport { Link } from \"react-router-dom\";\n\nexport default function Toptopbar() {\n  return (\n    <div className={styles.topbarContainer}>\n      <div className={styles.topbarLeft}>\n        <span className={styles.logo}>佐賀でサガそう</span>\n      </div>\n      <div className={styles.topbarCenter}>\n        <div className={styles.searchbar}>\n          {/* <Search className={styles.searchIcon}/>\n          <input\n            type=\"text\" \n            className={styles.searchInput}\n            placeholder='キーワードを入力してください' /> */}\n        </div>\n      </div>\n      <div className={styles.topbarRight}>\n        <div className={styles.topbarItemIcons}>\n          <div className={styles.topbarIconItem}>\n            <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"white\"}}>\n              <span className={styles.loginButton}>\n                ログイン\n              </span>\n            </Link>\n            \n          </div>\n          <div className={styles.topbarIconItem}>\n            <Link to=\"/register\" style={{ textDecoration: \"none\", color: \"white\"}}>\n              <span className={styles.registerButton}>新規登録\n              </span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/oshimayamato/practice/matching/frontend/src/state/AuthContext.js",[],[],"/home/oshimayamato/practice/matching/frontend/src/state/AuthReducer.js",[],[],"/home/oshimayamato/practice/matching/frontend/src/actionCalls.js",[],[],"/home/oshimayamato/practice/matching/frontend/src/pages/direct/RoomList.jsx",["150","151"],[],"import React, { useContext, useEffect, useState } from 'react'\n\nimport io from \"socket.io-client\"\nimport { AuthContext } from '../../state/AuthContext';\nimport axios from 'axios';\nimport \"./RoomList.css\"\nimport Room from '../../components/room/Room';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default function RoomList() {\n\n  const { user } = useContext(AuthContext);\n  \n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    try {\n      const fetchRooms = async () => {\n        const _id = user._id\n        const type = user.type\n        const getroom = {\n          _id: _id,\n          type: type\n        }\n        const res = await axios.post(`/message/getid`, getroom);\n        // console.log(res)\n        setRooms(res.data.sort((room1, room2) => {\n          return new Date(room2.updatedAt) - new Date (room1.updatedAt);\n        })\n        );\n      // console.log(response)\n      };\n      fetchRooms();\n    } catch(err) {\n      console.log(err);\n    }\n  }, []);\n  return (\n    <div className=\"roomscontainer\">\n      <div className=\"title\">\n        <h1>メッセージ</h1>\n      </div>\n      <div className=\"roomsWrapper\">\n        {rooms.map((room, index) => (\n          <Link to={`/talkroom/${room._id}`} style={{ textDecoration: \"none\", color: \"black\"}} key={index} >\n              {/* {room.studentName === user.username \n                ? <Room name={room.teacherName} />\n                : <Room name={room.studentName} />\n              } */}\n              <Room Id={room._id}  key={index}/>\n          </Link>\n        ))}\n      </div>\n    \n  </div>\n);\n}\n","/home/oshimayamato/practice/matching/frontend/src/components/room/Room.jsx",["152","153"],[],"import axios from 'axios';\nimport React, { useContext, useState } from 'react'\nimport { useEffect } from 'react'\nimport { AuthContext } from '../../state/AuthContext'\nimport \"./Room.css\"\n//トークルームのうちの1つのルーム\nexport default function ({Id}) {\n\n\n  // console.log(Id)\n  const { user } = useContext(AuthContext);\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n   const fetchData = async () => {\n    try {\n      \n      const Data = await axios.get(`/message/latest/${Id}`);\n      // console.log(Data.data);\n      setData(Data.data)\n    } catch (err) {\n      console.log(err);\n    }\n    \n   }\n   fetchData();\n  }, [])\n\n\n  return (\n    <div className=\"room-card\" >\n      { user.username === data.studentName \n      ? <p>{data.teacherName}</p>\n      : <p>{data.studentName}</p>\n      }\n      {/* <p>{Data.name}</p> */}\n      <p className=\"message\">{data.message}</p>\n    </div>\n  )\n}\n","/home/oshimayamato/practice/matching/frontend/src/pages/rooms/TalkRoom.jsx",["154","155","156","157","158","159","160","161","162"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport SingleMessage from '../../components/sendmessage/SingleMessage';\nimport { AuthContext } from '../../state/AuthContext';\n\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n  Avatar\n} from \"@chatscope/chat-ui-kit-react\";\n\nimport \"./TalkRoom.css\"\n  \n\nexport default function TalkRoom() {\n\n\n  const { user } = useContext(AuthContext)\n\n  // input欄の管理\n  const [message, setMessage] = useState(\"\");\n  // トーク履歴の管理\n  const [list, setList] = useState([])\n\n  const roomId = useParams().room_id\n\n  const [room , setRoom] = useState([]);\n\n  const [id, setId] = useState(roomId)\n\n  const messageContainerRef = useRef(null);\n  // 受け取れた\n  // console.log(roomId);\n\n  useEffect(() => {\n\n    const fetchRoom = async () => {\n      const Room = await axios.get(`/message/${id}`);\n      // console.log(Room.data)\n      setRoom(Room.data);\n    }\n    fetchRoom();\n\n\n\n    //通信したいURLを指定\n    //CORSの関係でエラーが出るので\n    //サーバー側で処理を書く\n    const socket = io(\"https://matchingapi.onrender.com\");\n\n    // console.log(\"a\")\n    // console.log(id);\n    \n\n    //このタイミングでDBから過去のトーク履歴をもってきてほしいと送信\n    socket.emit('join', roomId);\n\n    //いままでのトーク履歴がこれに返る\n    socket.on('init', (messages) => {\n      setList(messages);\n    })\n\n    \n\n\n    //自分や相手がメッセージを送信した際にここに返る\n    socket.on('addMessage', (message) => {\n      setList(list => [...list, message]);\n    })\n\n    // messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n\n    //一旦通信を切っている\n    return () => {\n      socket.disconnect();\n    };\n\n    \n    \n  }, [])//[roomId,list]\n  // console.log(data)\n\n\n\n  //通信したいURLを指定\n  const socket = io(\"https://matchingapi.onrender.com\");\n\n  const handleInputMessage = (e) => {\n    e.preventDefault();\n    setMessage(e.target.value)\n  }\n\n  // socket.on('addMessage', async(message) => {\n  //   console.log(\"返ってきました\")\n  //   setList(list => [...list, message]);\n  // })\n\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const User = {\n      senderId: user._id,\n      message: message,\n      roomId: roomId \n    }\n    socket.emit('send_message', User);\n    setMessage(\"\");\n    console.log(\"sousinn\")\n  }\n  \n  return (\n    <div className=\"talkroom\">\n      <div className=\"container\">\n        <h2>{ \n            user.username === room.studentName\n            ? room.teacherName\n            : room.studentName\n          }\n        </h2>\n        <div className='MessageArea' ref={messageContainerRef}>\n          {list.map((item,index) => (\n          <SingleMessage key={index} item={item} />\n        ))}\n        </div>\n        \n        <div className=\"chatInputButton\">\n          <input type=\"text\" placeholder='メッセージを入力' onChange={handleInputMessage} value={message}/>\n          <button style={{ backgroundColor: message === \"\" ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,1)\"}} disabled={message === \"\"} onClick={handleSendMessage}>送信する</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\n// export default function TalkRoom() {\n//   return (\n//     <div style={{ position:\"relative\", height: \"500px\" }}>\n//       <MainContainer>\n//         <ChatContainer>       \n//           <MessageList>\n//             <Message model={{\n//                     message: \"Hello my friend\",\n//                     sentTime: \"just now\",\n//                     sender: \"Joe\"\n//                     }} />\n//             </MessageList>\n//           <MessageInput placeholder=\"Type message here\" />        \n//         </ChatContainer>\n//       </MainContainer>\n//     </div>\n//   )\n// }\n","/home/oshimayamato/practice/matching/frontend/src/components/sendmessage/SingleMessage.jsx",["163"],[],"import { Message } from '@chatscope/chat-ui-kit-react';\nimport React, { useContext, useState } from 'react'\nimport { AuthContext } from '../../state/AuthContext'\nimport \"./SingleMessage.css\"\n\n\nexport default function SingleMessage({ item }) {\n  const { user } = useContext(AuthContext);\n\n  // itemの中身はmessage,senderId,roomId\n\n  \n\n  // console.log(item);\n  // console.log(user._id)\n  \n  return (\n    <>\n      {\n        user._id === item.sender_id\n        ? <Message \n          model={{\n            message: item.message,\n            position: \"first\",\n            direction: \"outgoing\"\n          }}\n          />\n        : <Message \n          model={{\n            message: item.message,\n            position: \"first\",\n            direction: \"incoming\"\n          }}\n          />\n      }\n      \n    </>\n  )\n}\n",{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":12,"column":33,"nodeType":"170","messageId":"171","endLine":12,"endColumn":35},{"ruleId":"164","severity":1,"message":"172","line":19,"column":13,"nodeType":"166","messageId":"167","endLine":19,"endColumn":17},{"ruleId":"164","severity":1,"message":"173","line":19,"column":19,"nodeType":"166","messageId":"167","endLine":19,"endColumn":29},{"ruleId":"164","severity":1,"message":"174","line":19,"column":31,"nodeType":"166","messageId":"167","endLine":19,"endColumn":36},{"ruleId":"164","severity":1,"message":"172","line":70,"column":13,"nodeType":"166","messageId":"167","endLine":70,"endColumn":17},{"ruleId":"164","severity":1,"message":"173","line":70,"column":19,"nodeType":"166","messageId":"167","endLine":70,"endColumn":29},{"ruleId":"164","severity":1,"message":"174","line":70,"column":31,"nodeType":"166","messageId":"167","endLine":70,"endColumn":36},{"ruleId":"164","severity":1,"message":"175","line":2,"column":16,"nodeType":"166","messageId":"167","endLine":2,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":2,"column":31,"nodeType":"166","messageId":"167","endLine":2,"endColumn":37},{"ruleId":"177","severity":1,"message":"178","line":33,"column":6,"nodeType":"179","endLine":33,"endColumn":16,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":39,"column":18,"nodeType":"183","messageId":"171","endLine":39,"endColumn":20},{"ruleId":"177","severity":1,"message":"184","line":31,"column":6,"nodeType":"179","endLine":31,"endColumn":8,"suggestions":"185"},{"ruleId":"164","severity":1,"message":"186","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":15},{"ruleId":"164","severity":1,"message":"187","line":13,"column":16,"nodeType":"166","messageId":"167","endLine":13,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":10,"column":5,"nodeType":"191","messageId":"192","endLine":29,"endColumn":6},{"ruleId":"164","severity":1,"message":"176","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"193","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":10},{"ruleId":"177","severity":1,"message":"194","line":39,"column":6,"nodeType":"179","endLine":39,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":7,"column":1,"nodeType":"198","endLine":41,"endColumn":2},{"ruleId":"177","severity":1,"message":"199","line":28,"column":6,"nodeType":"179","endLine":28,"endColumn":8,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"201","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":14},{"ruleId":"164","severity":1,"message":"202","line":10,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":16},{"ruleId":"164","severity":1,"message":"203","line":11,"column":3,"nodeType":"166","messageId":"167","endLine":11,"endColumn":16},{"ruleId":"164","severity":1,"message":"204","line":12,"column":3,"nodeType":"166","messageId":"167","endLine":12,"endColumn":14},{"ruleId":"164","severity":1,"message":"205","line":13,"column":3,"nodeType":"166","messageId":"167","endLine":13,"endColumn":10},{"ruleId":"164","severity":1,"message":"206","line":14,"column":3,"nodeType":"166","messageId":"167","endLine":14,"endColumn":15},{"ruleId":"164","severity":1,"message":"207","line":15,"column":3,"nodeType":"166","messageId":"167","endLine":15,"endColumn":9},{"ruleId":"164","severity":1,"message":"208","line":35,"column":14,"nodeType":"166","messageId":"167","endLine":35,"endColumn":19},{"ruleId":"177","severity":1,"message":"209","line":86,"column":6,"nodeType":"179","endLine":86,"endColumn":8,"suggestions":"210"},{"ruleId":"164","severity":1,"message":"211","line":2,"column":29,"nodeType":"166","messageId":"167","endLine":2,"endColumn":37},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'user' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'error' is assigned a value but never used.","'Notifications' is defined but never used.","'Search' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["212"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'post.userId'. Either include it or remove the dependency array.",["213"],"'Image' is defined but never used.","'setFile' is assigned a value but never used.","'convertLength' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'io' is defined but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.type'. Either include them or remove the dependency array.",["214"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'Id'. Either include it or remove the dependency array.",["215"],"'styles' is defined but never used.","'MainContainer' is defined but never used.","'ChatContainer' is defined but never used.","'MessageList' is defined but never used.","'Message' is defined but never used.","'MessageInput' is defined but never used.","'Avatar' is defined but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'roomId'. Either include them or remove the dependency array.",["216"],"'useState' is defined but never used.",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [user._id, username]",{"range":"227","text":"228"},"Update the dependencies array to be: [post.userId]",{"range":"229","text":"230"},"Update the dependencies array to be: [user._id, user.type]",{"range":"231","text":"232"},"Update the dependencies array to be: [Id]",{"range":"233","text":"234"},"Update the dependencies array to be: [id, roomId]",{"range":"235","text":"236"},[990,1000],"[user._id, username]",[911,913],"[post.userId]",[982,984],"[user._id, user.type]",[620,622],"[Id]",[1795,1797],"[id, roomId]"]